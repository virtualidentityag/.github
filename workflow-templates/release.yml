# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Push

on:
  push:
    branches:
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_REGION: 'eu-central-1'
  AWS_S3_BUCKET: 'frontend-live-preview'

jobs:
  pre_release:
    name: Check if a release with the same version number already exists
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get current package version
        uses: martinbeentjes/npm-get-version-action@v1.0.0
        id: package-version

      - name: Get tag from package.json
        run: echo "${{ steps.package-version.outputs.current-version }}"

      - name: check if tag already exists
        shell: bash
        id: tag_existance
        run: echo "##[set-output name=oldtag;]$(echo $(git tag -l "${{ steps.package-version.outputs.current-version }}"))"

      - name: Validate tag reference from github
        if: ${{ steps.tag_existance.outputs.oldtag != '' }}
        run: exit 1
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: pre_release
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Cache npm dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Run npm ci (skipped if cache-hit exists)
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - run: npm run build

      - name: Archive Release
        uses: thedoctor0/zip-release@v0.3.0
        with:
          filename: 'dist.zip'
          path: 'dist/'
      - run: mv dist.zip dist/

      - name: Get current package version
        uses: martinbeentjes/npm-get-version-action@v1.0.0
        id: package-version

      - name: Extract repository name
        shell: bash
        id: extract_repository_name
        run: echo "##[set-output name=repository;]$(echo ${GITHUB_REPOSITORY#*/})"

      - name: Deploy to frontend.live
        uses: jakejarvis/s3-sync-action@v0.5.1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FRONTEND_LIVE_PREVIEW_DEPLOY_AWS_ACCESS_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FRONTEND_LIVE_PREVIEW_DEPLOY_AWS_ACCESS_SECRET }}
          SOURCE_DIR: 'dist'
          DEST_DIR: '${{ steps.extract_repository_name.outputs.repository }}/releases/${{ steps.package-version.outputs.current-version}}'

      - uses: actions/checkout@master
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: false
          CUSTOM_TAG: ${{ steps.package-version.outputs.current-version }}
          RELEASE_BRANCHES: master
